var searchIndex = JSON.parse('{\
"orca":{"doc":"","t":"AAAAOAAOIDLLALKLLLKLLLLLLLAMLLALLLLLDLLLLLLLLLLLLLLLMLMLLLLLLLDLLLLLLLLLLLLALALLLLLADLLLLLLLLLLMMLLLLDLLLLLLLLFLLLLLLLLLLLNIENNIENNNDALLLLLLLLLLLLLLLLLFLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIILLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLIDLLLLAFLLKALLLLLLLLLLLLLLLLMKLKLLLLNDGDEDNNLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLEDNDILLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLKLLLLLLLLLLLLNENNDINENLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMALLLLLLLLLMLALLKLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["pipelines","llm","memory","prompt","prompt","qdrant","record","template","Pipeline","PipelineResult","borrow","borrow_mut","pipeline","content","context","deref","deref_mut","drop","execute","fmt","from","init","into","into_request","load_context","load_record","mapreduce","name","new","role","sequential","try_from","try_into","type_id","vzip","with_llm_response","LLMPipeline","borrow","borrow_mut","clone","clone_into","context","deref","deref_mut","drop","duplicate_template","execute","from","from_ref","init","into","into_request","name","new","template_engine","to_owned","try_from","try_into","type_id","vzip","with_memory","with_template","MapReducePipeline","borrow","borrow_mut","context","deref","deref_mut","drop","execute","from","init","into","into_request","load_context","master","new","task","try_from","try_into","type_id","vzip","with_record","worker","Task","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","records","template_name","try_from","try_into","type_id","vzip","SequentialPipeline","borrow","borrow_mut","context","default","deref","deref_mut","drop","execute","format_prompt_as_user","from","init","into","into_request","link","load_context","new","try_from","try_into","type_id","vzip","Bert","Embedding","EmbeddingResponse","Empty","Empty","LLM","LLMResponse","OpenAI","OpenAI","Quantized","TokenOutputStream","bert","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","decode_all","decode_rest","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","device","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","generate","generate_embedding","get_embedding","get_role","get_tensor","get_token","init","init","init","into","into","into","into_inner","into_request","into_request","into_request","new","next_token","openai","quantized","to_string","to_string","tokenizer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Bert","as_generalized_ref","as_ref","borrow","borrow_mut","build_model_and_tokenizer","default","deref","deref_mut","drop","from","generate_embedding","init","into","into_request","new","offline","try_from","try_into","type_id","vzip","with_cpu","with_model_id","with_normalize_embeddings","with_revision","with_tracing","Choice","Embedding","EmbeddingPayload","EmbeddingUsage","OpenAI","OpenAIEmbeddingResponse","Payload","Response","Usage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","embedding","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","generate","generate_embedding","generate_embedding_request","generate_request","index","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","object","prompt_tokens","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_payload","to_payload","to_payload","to_payload","to_payload","to_payload","to_payload","to_payload","to_string","to_string","to_vec","total_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_emedding_model","with_max_tokens","with_model","with_stream","with_temperature","with_top_p","L13b","L13bChat","L13bCode","L34bCode","L70b","L70bChat","L7b","L7bChat","L7bCode","Mistral7b","Mistral7bInstruct","Model","Quantized","borrow","borrow","borrow_mut","borrow_mut","build_model","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","generate","init","init","into","into","into_request","into_request","load_model","load_model_from_path","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_model","with_sample_len","Buffer","ChatBuffer","Memory","MemoryClone","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_box","clone_box","clone_box","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from_ref","from_ref","init","init","into","into","into_request","into_request","memory","memory","memory","new","new","save_memory","save_memory","save_memory","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Prompt","TemplateEngine","add_to_template","as_any","borrow","borrow_mut","chat","clean_prompt","clone","clone_into","clone_prompt","context","default","deref","deref_mut","drop","from","from_ref","get_template","init","into","into_request","new","register_template","render","render_chat","render_context","save","templates","to_chat","to_owned","to_string","try_from","try_into","type_id","vzip","Assistant","ChatHelper","ChatPrompt","Message","Role","RoleHelper","System","User","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_prompt","content","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","new","remove_last_comma","role","save","serialize","serialize","to_chat","to_owned","to_owned","to_owned","to_owned","to_payload","to_payload","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Context","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","from","from_ref","get","get_variables","init","into","into_request","new","serialize","set","to_owned","to_payload","try_from","try_into","type_id","vzip","Condition","FoundPoint","Matches","Qdrant","ToPayload","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_collection","delete_collection","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","id","init","init","init","insert","insert_many","into","into","into","into_request","into_request","into_request","new","payload","score","search","to_payload","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Bytes","Content","File","Huggingface","Record","Spin","String","Tokenizer","Vec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_prompt","content","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","header","html","init","init","init","into","into","into","into_request","into_request","into_request","metadata","new","pdf","serialize","serialize","spin","split","split_with_tokenizer","to_chat","to_owned","to_owned","to_payload","to_payload","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_content","with_header","with_metadata","HTML","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_file","from_url","init","into","into_request","spin","try_from","try_into","type_id","vzip","with_selectors","Pdf","PdfOutput","String","Vec","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_buffer","from_file","init","init","into","into","into_request","into_request","spin","to_string","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"orca"],[8,"orca::pipelines"],[36,"orca::pipelines::pipeline"],[62,"orca::pipelines::mapreduce"],[84,"orca::pipelines::mapreduce::task"],[101,"orca::pipelines::sequential"],[122,"orca::llm"],[199,"orca::llm::bert"],[225,"orca::llm::openai"],[419,"orca::llm::quantized"],[471,"orca::memory"],[526,"orca::prompt"],[562,"orca::prompt::chat"],[663,"orca::prompt::context"],[688,"orca::qdrant"],[742,"orca::record"],[822,"orca::record::html"],[841,"orca::record::pdf"]],"d":["","","","","","","","","","","","","","Retrieves the content of the LLM response.","Retrieves the current context of the pipeline.","","","","Executes a given pipeline and produces an LLM response.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Sets the context for the current pipeline execution using a …","Loads a given record into the context of the LLM pipeline.","","Name of the pipeline which generated the result.","Constructs a new <code>PipelineResult</code> instance with a specified …","Determines the role associated with the LLM response.","","","","","","Sets the LLM response for the current <code>PipelineResult</code>.","Represents the simples pipeline for a Large Language Model …","","","","","","","","","Duplicate a template with a new name and return the new …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","The unique identifier for this LLMPipeline.","Creates a new LLMPipeline given an LLM and a prompt template.","The prompt template engine instance that is used by the …","","","","","","Change the memory used by the LLMPipeline.","Modifies the LLMPipeline’s prompt template.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Add a simple LLM Pipeline to the sequential pipeline.","","Initialize a new sequential pipeline.","","","","","Bert embedding response","Embedding trait is used to generate an embedding from an …","","Empty response; usually used to initialize a pipeline result …","Empty response; usually used to initialize a pipeline result …","Generate with context trait is used to execute an LLM …","","OpenAI embedding response","OpenAI response","Quantized model response","This is a wrapper around a tokenizer to ensure that tokens …","This module provides an implementation for Bert in the …","","","","","","","","","","Default EmbeddingResponse is Empty","Default LLMResponse is Empty","","","","","","","Returns a <code>Device</code> object representing either a CPU or a …","","","","Display the response content from an EmbeddingResponse","","","Display the response content from an LLMResponse","Returns the argument unchanged.","Convert an OpenAI embedding response to an …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an OpenAI response to an LLMResponse","Generate a response from an LLM using a context and a …","Generate an embedding from an Online Service.","Get the embedding from an OpenAIEmbeddingResponse","Get the role of the response from an LLMResponse, if …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the model and tokenizer.","Provides default values for <code>Bert</code>.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Creates a new <code>Bert</code> instance with a specified prompt.","Configures the model to run offline.","","","","","Configures the model to run on CPU.","Sets the model ID.","Enables L2 normalization for embeddings.","Sets the revision for the model.","Enables tracing for the model.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Generate a request for the OpenAI API to create embeddings","Generate a request for the OpenAI API and set the …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Create a new OpenAI client","","","","","","","","","","","","","","","","","","","","","","","","Convert the embedding response to a vector of f32 values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set emedding model to use e.g. “text-embedding-ada-002”","The maximum number of tokens to generate in the chat …","Set model to use e.g. “davinci”, “gpt-3.5-turbo”","If set, partial message deltas will be sent, like in …","What sampling temperature to use, between 0 and 2. Higher …","An alternative to sampling with temperature, called …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","We do this to allow for cloning of Box.","","","","","","","","","","","","","","","","","","","","Display the memory of the Memory Buffer.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Get the memory of the Memory Buffer.","Get the memory of the Memory Buffer.","Get the memory of the Memory Buffer.","Initialize a new Memory Buffer.","Initialize a new Memory Buffer.","Load a message into the Memory Buffer.","Load a message into the Memory Buffer.","Load a message into the Memory Buffer.","","","","","","","","","","","","A trait representing a prompt for a Large Language Model.","Represents a prompt engine that uses handlebars templates …","Adds a new template to the prompt.","","","","","Cleans the prompt by removing unparsable characters and …","Clone a prompt template","","Clone the current prompt into a Boxed trait object.","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Creates a new <code>TemplateEngine</code> with the given prompt string.","","Renders a Handlebars template and returns the result as a …","Renders a Handlebars template with the given data and …","Renders a Handlebars template with the given data and …","Save the data from another <code>Prompt</code> into the current one.","Registered templates","Convert the current prompt to a <code>ChatPrompt</code>.","","Convert the current prompt to a <code>String</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message text","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The message role (system, user, assistant)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new context","","","","Returns the argument unchanged.","","Get a variable from the context","Get the variables from the context and clean them up for …","","Calls <code>U::from(self)</code>.","","Create a new context","","Set a variable in the context","","","","","","","Represents search conditions for the Qdrant wrapper.","Represents a found point in the vector database.","","","Trait to convert a type to a Qdrant payload.","","","","","","","Creates a new collection with the given name and vector …","Deletes a collection with the given name.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Inserts a new point into the specified collection with the …","Inserts multiple vectors and their corresponding payloads …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new <code>Qdrant</code> instance with the given <code>host</code> and <code>port</code>.","","","Searches for points in a given collection that match the …","","","","","","","","","","","","","","","Content of a record which can be represented as either a …","","","","","","","","","","","","","","","","","","","Content of the record.","","","","","","","","","","","Display the content of the record.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Header information for the record.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Metadata for the record (present in PDFs, for example).","Create a new record with the given content.","","","","“Spin the record” This means that your record should …","Splits the content of a <code>Record</code> into multiple smaller …","Splits the content of a <code>Record</code> into multiple smaller …","","","","","","","","","","","","","","","","","","","","","Modify the header of the record.","Modify the metadata of the record.","","","","","","","","Returns the argument unchanged.","Create a new HTML record from a file","Create a new HTML record from a URL","","Calls <code>U::from(self)</code>.","","","","","","","Set the selectors for the HTML record","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new Pdf record from a buffer When calling this …","Create a new PDF record from a file When calling this …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get the vector representation of the Pdf output","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,0,1,90,1,1,1,90,1,1,1,1,1,90,90,0,1,1,1,0,1,1,1,1,1,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,25,25,25,25,25,25,25,25,25,25,25,25,0,25,0,25,25,25,25,25,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,30,30,34,0,0,34,19,0,0,34,19,19,0,0,31,34,19,31,34,19,31,31,31,34,19,31,34,19,31,34,19,0,31,34,19,34,34,19,19,31,34,34,19,19,22,91,34,19,34,31,31,34,19,31,34,19,31,31,34,19,31,31,0,0,34,19,31,31,34,19,31,34,19,31,34,19,31,34,19,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,45,46,47,45,46,47,47,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,49,50,38,37,45,46,51,52,47,45,45,46,49,50,38,38,37,37,45,46,51,52,49,50,38,37,45,46,51,52,47,45,46,47,47,47,47,47,45,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,47,45,46,49,50,38,37,45,46,51,52,45,46,47,49,50,38,37,45,46,51,52,38,37,37,46,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,49,50,38,37,45,46,51,52,47,47,47,47,47,47,47,61,61,61,61,61,61,61,61,61,61,61,0,0,60,61,60,61,60,61,61,60,60,61,60,61,60,61,61,60,61,61,60,60,61,60,61,60,61,60,60,60,61,60,61,60,61,60,61,60,61,60,60,0,0,0,0,62,63,62,63,62,63,92,62,63,62,63,62,63,62,63,62,63,62,63,62,62,63,62,63,62,63,62,63,62,63,62,63,24,62,63,62,63,24,62,63,62,63,62,62,63,62,63,62,63,62,63,0,0,65,39,65,65,0,0,65,65,39,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,39,65,39,65,39,65,65,65,65,76,0,0,0,0,0,76,76,76,54,68,75,76,54,68,75,68,75,76,54,68,75,76,54,68,75,67,54,76,54,68,75,76,54,68,75,76,54,76,54,68,75,76,54,76,76,54,54,76,76,54,68,75,76,54,68,75,76,54,68,75,76,54,68,75,76,54,68,75,54,0,54,67,76,54,67,76,54,68,75,76,54,67,76,54,76,54,68,75,76,54,68,75,76,54,68,75,76,54,68,75,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,82,0,0,83,82,79,83,82,79,79,79,83,82,79,83,82,79,83,82,79,83,82,79,83,83,82,79,79,79,83,82,79,83,82,79,79,83,83,79,81,83,82,79,83,82,79,83,82,79,83,82,79,85,0,85,85,0,0,84,0,84,85,84,16,85,84,16,84,16,84,16,16,16,85,84,16,85,84,16,85,84,16,84,84,84,16,85,84,16,84,16,16,0,85,84,16,85,84,16,85,84,16,16,16,0,84,16,93,16,16,16,84,16,84,16,84,16,85,84,16,85,84,16,85,84,16,85,84,16,16,16,16,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,0,87,87,89,87,89,87,89,87,89,87,89,87,87,89,87,89,89,89,87,89,87,89,87,89,87,87,89,87,89,87,89,87,89,87],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[1,2],[[],[[3,[2,2]]]],[4],[4],[4],[5,[[8,[[7,[6]]]]]],[[1,9],10],[[]],[[],4],[[]],[[],11],[[[0,[12,13]],[0,[14,15]]],[[8,[[7,[6]]]]]],[[5,16]],0,0,[2,1],[1,2],0,[[],17],[[],17],[[],18],[[]],[[1,19],1],0,[[]],[[]],[20,20],[[]],[20,[[3,[2,2]]]],[4],[4],[4],[[20,5],[[21,[2]]]],[[20,5],[[8,[[7,[6]]]]]],[[]],[[]],[[],4],[[]],[[],11],0,[[[0,[22,23]]],20],0,[[]],[[],17],[[],17],[[],18],[[]],[[20,24],20],[[20,5,5],20],0,[[]],[[]],[25,[[3,[2,2]]]],[4],[4],[4],[[25,5],[[8,[[7,[6]]]]]],[[]],[[],4],[[]],[[],11],[[25,[0,[14,15]]],[[8,[[7,[6]]]]]],0,[[[27,[[26,[20]]]],[27,[[26,[20]]]]],25],0,[[],17],[[],17],[[],18],[[]],[[25,2,16],25],0,0,[[]],[[]],[4],[4],[4],[[]],[[],4],[[]],[[],11],[[2,28],29],0,0,[[],17],[[],17],[[],18],[[]],0,[[]],[[]],[30,[[3,[2,2]]]],[[],30],[4],[4],[4],[[30,5],[[8,[[7,[6]]]]]],[5,2],[[]],[[],4],[[]],[[],11],[[30,20],30],[[30,[0,[14,15]]],[[8,[[7,[6]]]]]],[[],30],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[31],[31,[[32,[2]]]],[31,[[33,[[21,[2]]]]]],[[],34],[[],19],[4],[4],[4],[4],[4],[4],[35,[[32,[36]]]],[4],[4],[4],[[34,9],10],[[34,9],10],[[19,9],10],[[19,9],10],[[]],[37,34],[[]],[[]],[38,19],[[[7,[39]]],[[8,[[7,[6]]]]]],[[[7,[39]]],[[8,[[7,[6]]]]]],[34,[[33,[[28,[40]]]]]],[19,2],[34,41],[[31,5],[[21,[42]]]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[31,43],[[],11],[[],11],[[],11],[43,31],[[31,42],[[32,[[21,[2]]]]]],0,0,[[],2],[[],2],[31,43],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,[[]],[44,44],[[]],[[]],[44,[[33,[44]]]],[[],44],[4],[4],[4],[[]],[[44,[7,[39]]],[[8,[[7,[6]]]]]],[[],4],[[]],[[],11],[[],44],[44,44],[[],17],[[],17],[[],18],[[]],[44,44],[[44,5],44],[44,44],[[44,5],44],[44,44],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[],47],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[48,[[17,[49]]]],[48,[[17,[50]]]],[48,[[17,[38]]]],[48,[[17,[37]]]],[48,[[17,[45]]]],[48,[[17,[46]]]],[48,[[17,[51]]]],[48,[[17,[52]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[45,45],35],[[46,46],35],[[49,9],10],[[50,9],10],[[38,9],10],[[38,9],10],[[37,9],10],[[37,9],10],[[45,9],10],[[46,9],10],[[51,9],10],[[52,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,[7,[39]]],[[8,[[7,[6]]]]]],[[47,[7,[39]]],[[8,[[7,[6]]]]]],[[47,5],[[33,[53]]]],[[47,[55,[54]]],[[33,[53]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],47],0,0,[[49,56],17],[[50,56],17],[[38,56],17],[[37,56],17],[[45,56],17],[[46,56],17],[[51,56],17],[[52,56],17],[[]],[[]],[[]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],2],[[],2],[37,[[28,[40]]]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,5],47],[[47,59],47],[[47,5],47],[[47,35],47],[[47,40],47],[[47,40],47],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[60,[[33,[60]]]],[61,61],[[]],[[],60],[4],[4],[4],[4],[4],[4],[[61,9],10],[[]],[[]],[[]],[[60,[7,[39]]],[[8,[[7,[6]]]]]],[[],4],[[],4],[[]],[[]],[[],11],[[],11],[[60,61],[[33,[60]]]],[[60,5],[[33,[60]]]],[[],60],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],[[60,61],60],[[60,4],60],0,0,0,0,[[]],[[]],[[]],[[]],[62,62],[63,63],[[],[[7,[24]]]],[[],[[7,[24,64]]]],[[],[[7,[24,64]]]],[[]],[[]],[[],62],[[],63],[4],[4],[4],[4],[4],[4],[[62,9],10],[[62,9],10],[[63,9],10],[[]],[[]],[[]],[[]],[[],4],[[],4],[[]],[[]],[[],11],[[],11],[[],39],[62,39],[63,39],[[],62],[[],63],[39,33],[[62,39],33],[[63,39],33],[[]],[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,[[65,5,5]],[12,66],[[]],[[]],0,[[5,35],2],[65,65],[[]],[[],[[7,[39]]]],0,[[],65],[4],[4],[4],[[]],[[]],[[65,5],[[21,[2]]]],[[],4],[[]],[[],11],[[],65],[[65,5,5],65],[[65,5],[[33,[[7,[39]]]]]],[[65,5,[21,[14]]],[[33,[67]]]],[[65,5,14],[[33,[[7,[39]]]]]],[[[7,[39]]]],0,[[],[[33,[67]]]],[[]],[[],2],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[68,69,70,71,72,73],74],[[75,69,70,71,72,73],74],[76,76],[54,54],[68,68],[75,75],[[]],[[]],[[]],[[]],[67,[[7,[39]]]],0,[4],[4],[4],[4],[4],[4],[4],[4],[48,[[17,[76]]]],[48,[[17,[54]]]],[4],[4],[4],[4],[[76,76],35],[[54,54],35],[[76,9],10],[[76,9],10],[[54,9],10],[[54,9],10],[5,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[76,5],54],[5,2],0,[[67,[7,[39]]]],[[76,56],17],[[54,56],17],[67,[[33,[67]]]],[[]],[[]],[[]],[[]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[67,2],[[],2],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,[[]],[[]],[[[77,[23]]],[[77,[23]]]],[[]],[[],77],[4],[4],[4],[[]],[[]],[[77,5],21],[[[77,[14]]],[[78,[2,2]]]],[[],4],[[]],[[],11],[[],77],[[[77,[14]],56],17],[[77,5],21],[[]],[[],[[17,[57,58]]]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[79,5,80],33],[[79,5],33],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[79,5,[28,[40]],81],33],[[79,5,[28,[[28,[40]]]],[28,[81]]],33],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[5,59],79],0,0,[[79,5,[28,[40]],4,[21,[[28,[82]]]]],[[33,[[28,[83]]]]]],[[],[[33,[57]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[16,16],[[]],[[]],[16,[[7,[39]]]],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[[84,84],35],[[84,9],10],[[84,9],10],[[16,9],10],[[]],[[]],[[]],[[]],[[]],0,0,[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],11],[[],11],[[],11],0,[84,16],0,[[84,56],17],[[16,56],17],[[],[[33,[16]]]],[[16,4],[[28,[16]]]],[[16,4,85],[[33,[[28,[16]]]]]],[16,[[33,[67]]]],[[]],[[]],[[],[[17,[57,58]]]],[[],[[17,[57,58]]]],[[],2],[16,2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[16,84],16],[[16,2],16],[[16,2],16],0,[[]],[[]],[4],[4],[4],[[86,9],10],[[]],[5,[[33,[86]]]],[5,[[33,[86]]]],[[],4],[[]],[[],11],[86,[[33,[16]]]],[[],17],[[],17],[[],18],[[]],[[86,5],86],0,0,0,0,[[]],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[[87,9],10],[[]],[[]],[[[28,[88]],35],89],[[5,35],89],[[],4],[[],4],[[]],[[]],[[],11],[[],11],[89,[[33,[16]]]],[[],2],[87,[[28,[2]]]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]]],"c":[],"p":[[3,"PipelineResult"],[3,"String"],[3,"HashMap"],[15,"usize"],[15,"str"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"Sized"],[8,"Send"],[8,"Serialize"],[8,"Sync"],[3,"Record"],[4,"Result"],[3,"TypeId"],[4,"LLMResponse"],[3,"LLMPipeline"],[4,"Option"],[8,"LLM"],[8,"Clone"],[8,"Memory"],[3,"MapReducePipeline"],[3,"RwLock"],[3,"Arc"],[3,"Vec"],[3,"Task"],[3,"SequentialPipeline"],[3,"TokenOutputStream"],[6,"Result"],[6,"Result"],[4,"EmbeddingResponse"],[15,"bool"],[4,"Device"],[3,"OpenAIEmbeddingResponse"],[3,"Response"],[8,"Prompt"],[15,"f32"],[3,"Tensor"],[15,"u32"],[3,"Tokenizer"],[3,"Bert"],[3,"Embedding"],[3,"EmbeddingUsage"],[3,"OpenAI"],[8,"Deserializer"],[3,"Payload"],[3,"EmbeddingPayload"],[3,"Usage"],[3,"Choice"],[3,"Request"],[3,"Message"],[15,"slice"],[8,"Serializer"],[3,"Payload"],[3,"Error"],[15,"u16"],[3,"Quantized"],[4,"Model"],[3,"Buffer"],[3,"ChatBuffer"],[3,"Global"],[3,"TemplateEngine"],[8,"Any"],[6,"ChatPrompt"],[3,"RoleHelper"],[3,"Helper"],[3,"Registry"],[3,"Context"],[3,"RenderContext"],[8,"Output"],[6,"HelperResult"],[3,"ChatHelper"],[4,"Role"],[3,"Context"],[3,"BTreeMap"],[3,"Qdrant"],[15,"u64"],[8,"ToPayload"],[4,"Condition"],[3,"FoundPoint"],[4,"Content"],[4,"Tokenizer"],[3,"HTML"],[4,"PdfOutput"],[15,"u8"],[3,"Pdf"],[8,"Pipeline"],[8,"Embedding"],[8,"MemoryClone"],[8,"Spin"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
